services:
  # The main OpenBao service that runs the server.
  # openbao:
  #   image: openbao-test
  #   container_name: openbao-server
  #   ports:
  #     - "8200:8200"
  #   command: server -config=/openbao/config/bao.hcl
  #   depends_on:
  #     openbao-init:
  #       condition: service_completed_successfully
  #   volumes:
  #     - ./config:/openbao/config
  #     - openbao-data:/openbao/data
  #     - tpm-data-store:/home/openbao/.local/share/tpm2-tss
  #   devices:
  #     - "/dev/tpmrm0:/dev/tpmrm0"
  #     - "/dev/tpm0:/dev/tpm0"
  #   security_opt:
  #     - "seccomp=unconfined"

  # This service runs ONCE to initialize the TPM token.
  openbao-init:
    image: openbao-test
    container_name: openbao-tpm-initializer
    # --- THIS IS THE CORRECTION ---
    # Set the entrypoint to the shell executable.
    entrypoint: /bin/sh
    # Pass the script as the command for the shell.
    command: >
      -c "
        # tail -f /dev/null
        if pkcs11-tool --module /usr/lib/x86_64-linux-gnu/libtpm2_pkcs11.so.1 --list-slots | grep -q 'token initialized'; then
          echo '✅ TPM token already initialized.';
        else
          echo '⚠️ Initializing TPM token...';
          pkcs11-tool --module /usr/lib/x86_64-linux-gnu/libtpm2_pkcs11.so.1 --init-token --so-pin=\"${SO_PIN}\" --label=\"openbao-token\";
          pkcs11-tool --module /usr/lib/x86_64-linux-gnu/libtpm2_pkcs11.so.1 --init-pin --so-pin=\"${SO_PIN}\" --pin=\"${USER_PIN}\";
          echo '✅ Initialization complete.';
        fi
      "
    environment:
      - SO_PIN
      - USER_PIN
    volumes:
      # - tpm-data-store:/home/root/.local/share
      - tpm-data-store:/home/openbao/.local/share
    devices:
      - "/dev/tpmrm0:/dev/tpmrm0"
      - "/dev/tpm0:/dev/tpm0"
    security_opt:
      - "seccomp=unconfined"

# Defines the named volumes to persist data.
volumes:
  tpm-data-store:
  openbao-data:
