# Helm template
inject:
  enabled: true
  # Config contains the configuration files ca.json and defaults.json
  config:
    files:
      ca.json:
        root: /home/step/certs/root_ca.crt
        federateRoots: []
        crt: /home/step/certs/intermediate_ca.crt
        key: /home/step/secrets/intermediate_ca_key
        address: :9000
        dnsNames:
          - moonwake.io
          - step-certificates.default.svc.cluster.local
        logger:
          format: json
        db:
          type: postgresql
          dataSource: ""
        authority:
          enableAdmin: false
          provisioners:
            - {"type":"JWK","name":"admin","key":{"use":"sig","kty":"EC","kid":"d03W2d-WuinSKMzXw0PrnG84ibrp2thzCZ5UWJihW24","crv":"P-256","alg":"ES256","x":"Y72DpSv7bkwIR_N59Ql7Mmqt31S5o3d_xYaD31WWwVM","y":"drzV5m4e2tSE1-qicvUxhaSGyoMU7XY47Rr9MSbBwEo"},"encryptedKey":"eyJhbGciOiJQQkVTMi1IUzI1NitBMTI4S1ciLCJjdHkiOiJqd2sranNvbiIsImVuYyI6IkEyNTZHQ00iLCJwMmMiOjYwMDAwMCwicDJzIjoiVVg4ZVVQRkpfVVNnTjhDNWp3V2xkUSJ9.DGw1sKegvG5ySgZY_3sErotFzQo3qnooIB-s17hcG2XZiDzjSA7oFg.VkfuBDTz5T8LsbfW.TKjHpfb9DyJIFdmBRWZdaEiYy4jgF-yfVbPuXcyJqhrykJe5DcAgn5TsLhe-F84BeheUUd4GyEHWP4vzJKeh1r6O6vrrAMxBGRySmhPJeoSNzc6_TYM8leNsbL-Way72SIFYYyTuNGUS-_sbnroeeEKd1HnT5sASd5d_sW3A6UN3ir3gpNB61L6DQi82gEej_Ew3-o8FLS-HW9Jlpb7e96WF9adUXs1q2XuJXjI3QXfxV_6zyBrVf4snIG1et0OaU8CNa7Szg32Rqg4cyIkErk_y69KIltC09BX8jvOVD1HqMCZKnFtUqzjIbqCbQHYOXn5-gp_9k9CbQhBluwM.gP5sbjdn5l5rEsgX1-lvqQ","options":{"x509":{},"ssh":{}}}
        tls:
          cipherSuites:
            - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256
            - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
          minVersion: 1.2
          maxVersion: 1.3
          renegotiation: false

      defaults.json:
        ca-url: https://moonwake.io
        ca-config: /home/step/config/ca.json
        fingerprint: 4e9bd5cf10bfbdb50a0a2f7393c5157fb18c051cd85cffd812829adb9c58a7f7
        root: /home/step/certs/root_ca.crt

  # Certificates contains the root and intermediate certificate and 
  # optionally the SSH host and user public keys
  certificates:
    # intermediate_ca contains the text of the intermediate CA Certificate
    intermediate_ca: |
      -----BEGIN CERTIFICATE-----
      MIIByDCCAW6gAwIBAgIQUePumns1nAhuF99Qk6ZohDAKBggqhkjOPQQDAjAuMREw
      DwYDVQQKEwhtb29ud2FrZTEZMBcGA1UEAxMQbW9vbndha2UgUm9vdCBDQTAeFw0y
      NTA3MDIwMjUyMTRaFw0zNTA2MzAwMjUyMTRaMDYxETAPBgNVBAoTCG1vb253YWtl
      MSEwHwYDVQQDExhtb29ud2FrZSBJbnRlcm1lZGlhdGUgQ0EwWTATBgcqhkjOPQIB
      BggqhkjOPQMBBwNCAARhNPTA+/lomDb8zrHqbFBRwbWnJP14Y0koslOyGBTV2Usb
      RpRMX3yCoChap7HURql+8uI8SXDGRCRdSJVhvA/7o2YwZDAOBgNVHQ8BAf8EBAMC
      AQYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQU5Sc/yQAu0gMWZD7f0d0e
      FrASSNkwHwYDVR0jBBgwFoAUfasgTn+VdcwP5x727vu+F64MDEwwCgYIKoZIzj0E
      AwIDSAAwRQIhAM0NpW6jqFoZq3HOAn5ewFIKYwKKvGw1JDdHS9MwPMvfAiAvMekq
      95LlU/IwdsnBJ05c6i0C/+c0qjSBH+b1pNiw9g==
      -----END CERTIFICATE-----
      
      
    # root_ca contains the text of the root CA Certificate
    root_ca: |
      -----BEGIN CERTIFICATE-----
      MIIBnzCCAUagAwIBAgIRAPIO1gcN/dvpiJh911xse/EwCgYIKoZIzj0EAwIwLjER
      MA8GA1UEChMIbW9vbndha2UxGTAXBgNVBAMTEG1vb253YWtlIFJvb3QgQ0EwHhcN
      MjUwNzAyMDI1MjEzWhcNMzUwNjMwMDI1MjEzWjAuMREwDwYDVQQKEwhtb29ud2Fr
      ZTEZMBcGA1UEAxMQbW9vbndha2UgUm9vdCBDQTBZMBMGByqGSM49AgEGCCqGSM49
      AwEHA0IABAvJjUonX6XumPusF0YNaGT4fX6zZBozeBDMumVWoElm6smoJvkn6k+5
      TM0v8C5AbRv00B8ljov4mhKdB7nhqBajRTBDMA4GA1UdDwEB/wQEAwIBBjASBgNV
      HRMBAf8ECDAGAQH/AgEBMB0GA1UdDgQWBBR9qyBOf5V1zA/nHvbu+74XrgwMTDAK
      BggqhkjOPQQDAgNHADBEAiBAqWC1XTFjOPopR2R9Of/Bo0mdwHXS5nYBawCIKe8t
      nQIgPEwdbpuEvKL003CyBqdys3ReRIKfy4WKk2hlzF12C8w=
      -----END CERTIFICATE-----
      

  # Secrets contains the root and intermediate keys and optionally the SSH
  # private keys
  secrets:
    # ca_password contains the password used to encrypt x509.intermediate_ca_key, ssh.host_ca_key and ssh.user_ca_key
    # This value must be base64 encoded.
    ca_password: ""
    provisioner_password: "" 

    x509:
      # intermediate_ca_key contains the contents of your encrypted intermediate CA key
      intermediate_ca_key: |
        -----BEGIN EC PRIVATE KEY-----
        Proc-Type: 4,ENCRYPTED
        DEK-Info: AES-256-CBC,50bce4c03b9931b9a21fd8b5eb1d634d
        
        YtVr5TJB4QgrPLonKWT3xiSLSBtj6pU3hOk58rSAwewwUwNmTUvTqhIDFZM06ddZ
        zDSfPM1PY4x2W5rlr8D2wtT5+S1vXeD1jtho4fiTbXcDKfL+y+IsPqaz49WJ7ADB
        78qAGgRZSuVIl1TKkcq4+/hx6m0DEL84qkSHD9ooFb0=
        -----END EC PRIVATE KEY-----
        

      # root_ca_key contains the contents of your encrypted root CA key
      # Note that this value can be omitted without impacting the functionality of step-certificates
      # If supplied, this should be encrypted using a unique password that is not used for encrypting
      # the intermediate_ca_key, ssh.host_ca_key or ssh.user_ca_key.
      root_ca_key: |
        -----BEGIN EC PRIVATE KEY-----
        Proc-Type: 4,ENCRYPTED
        DEK-Info: AES-256-CBC,235e5ec3ae2ce63c7f0c1d22af172b53
        
        1KXnG21eHM5wG8/o/ccgUyPxZFdHBiak3IDBWDuWen4HLHoy+lgBTVZAnTgiXo2A
        7UHRYgYk5jn938CtHZxpH5knmDQyQP1CEKfRcOdRzsfQpRjC4qha85y+9iV2AdCb
        wQ0x5FoQ/yfNSuJ3KgoVaVkFS0DxPFoE3mZhURx5bw0=
        -----END EC PRIVATE KEY-----
existingSecrets:
  enabled: true
  ca: true

# This ca block is from the Helm chart's own values, not the inject block
ca:
  db:
    persistent: false        
  env:
    - name: PGHOST
      valueFrom:
        secretKeyRef:
          name: step-ca-db-datasource
          key: host
    - name: PGPORT
      valueFrom:
        secretKeyRef:
          name: step-ca-db-datasource
          key: port
    - name: PGDATABASE
      valueFrom:
        secretKeyRef:
          name: step-ca-db-datasource
          key: database
    - name: PGUSER
      valueFrom:
        secretKeyRef:
          name: step-ca-db-datasource
          key: user
    - name: PGPASSWORD
      valueFrom:
        secretKeyRef:
          name: step-ca-db-datasource
          key: password
