# homelab.git/bootstrap/control-cluster/certs/step-ca-clusterissuer.yaml
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: step-ca-cluster-issuer
spec:
  # This tells cert-manager to use the step-issuer controller
  # The step-issuer-app needs to be deployed and running for this to work
  acme: # Note: step-issuer works over ACME protocol with step-ca
    server: https://step-ca.step-ca.svc.cluster.local:443/acme/acme/directory # ACME endpoint of your step-ca
    email: your-email@example.com # Replace with your email
    privateKeySecretRef:
      name: step-ca-account-key # cert-manager will create this secret
    # You MUST include the root CA certificate from your step-ca here
    # This is how cert-manager trusts your internal CA.
    # You will fetch this after step-ca is initialized.
    # caBundle: |
    #   -----BEGIN CERTIFICATE-----
    #   <BASE64 ENCODED ROOT CA CERT FROM STEP-CA>
    #   -----END CERTIFICATE-----
    solvers:
      # Use an HTTP01 solver for internal services if you have an Ingress controller for validation
      # OR, if not using a public domain and just for internal services, you might rely on
      # the fact that step-ca will accept requests from step-issuer without
      # requiring challenge validation if it's properly provisioned.
      # For purely internal K8s communication, HTTP01/DNS01 challenges might not be strictly needed
      # if the step-issuer has a provisioner that doesn't require them.
      - http01:
          ingress:
            class: nginx # Replace with your Ingress Controller class if using
